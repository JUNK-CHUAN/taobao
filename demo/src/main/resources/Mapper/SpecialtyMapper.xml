<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.DAO.SpecialtyMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.Entity.Specialty">
        <result column="spID" property="spID" jdbcType="INTEGER"/>
        <result column="sID" property="sID" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="picUrl" property="picUrl" jdbcType="VARCHAR"/>
        <result column="stock" property="stock" jdbcType="INTEGER"/>
        <result column="detail" property="detail" jdbcType="VARCHAR"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="FLOAT"/>
        <result column="sName" property="sName" jdbcType="VARCHAR"/>
        <result column="sPhone" property="sPhone" jdbcType="VARCHAR"/>
        <result column="sAddress" property="sAddress" jdbcType="VARCHAR"/>
        <result column="sales" property="salesVolume" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectSpecialty" resultMap="BaseResultMap">
        select spID, specialty.sID as sID, specialty.name as name,
        picUrl, stock, detail, category, price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress
        from specialty, seller
        where specialty.sID = seller.sID and spID = #{specialty_id}  and specialty.isDeleted=0
        order by specialty.insertTime DESC
    </select>

    <select id="selectSpecialtyByCategory" resultMap="BaseResultMap">
        select spID, specialty.sID as sID, specialty.name as name,
        picUrl, stock, detail, category, price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress
        from specialty, seller
        where specialty.sID = seller.sID and category = #{category} and specialty.isDeleted=0
        order by specialty.insertTime DESC
    </select>
    <select id="selectSpecialtyByPicUrl" resultType="INTEGER">
        select spID from specialty where picUrl = #{picUrl}
    </select>

    <select id="searchByKeyword" resultMap="BaseResultMap">
        select spID, specialty.sID as sID, specialty.name as name,
        picUrl, stock, detail, category, price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress
        from specialty, seller
        where specialty.sID = seller.sID  and specialty.isDeleted=0 and ((category like #{keyword})
         or (specialty.name like #{keyword}) or (detail like #{keyword}) or (seller.name like #{keyword}))
        order by specialty.insertTime DESC
    </select>

    <select id="selectSpecialtyBySid" resultMap="BaseResultMap">
        select spID, specialty.sID as sID, specialty.name as name,
        picUrl, stock, detail, category, price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress
        from specialty, seller
        where specialty.sID = seller.sID and specialty.sID=#{sID} and specialty.isDeleted=0
        order by specialty.insertTime DESC
    </select>

    <select id="createNewSpecialty">
        insert into specialty(sID, name, picUrl, stock, detail, category, price)
        values(#{sID}, #{name}, #{picUrl}, #{stock}, #{detail}, #{category}, #{price})
    </select>

    <select id="updateSpecialtyInfo">
        update specialty set name=#{name},stock=#{stock},category=#{category}, price=#{price}
        where spID=#{spID}
    </select>
    <select id="updateSpecialtyDetail">
        update specialty set detail=#{detail} where spID=#{spID}
    </select>
    <select id="updateSpecialtyPic">
        update specialty set picUrl=#{picUrl} where spID=#{spID}
    </select>
    <select id="reduceStock">
        update specialty set stock = stock - #{count}
        where spID=#{spID}
    </select>

    <select id="deleteSpecialty">
        update specialty set isDeleted=1, stock=0
        where spID=#{spID}
    </select>

    <select id="specialtySaleRank" resultMap="BaseResultMap">
        select sp.spID as spID, sp.sID as sID, sp.name as name,
        picUrl, stock, detail, sp.category as category, sp.price as price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress, sum(ordertable.count) as sales
        from specialty as sp, seller, ordertable
        where sp.sID = seller.sID and sp.spID=ordertable.spID and sp.isDeleted=0
        group by sp.spID
        order by sales DESC
    </select>
    <select id="specialtyStarRank" resultMap="BaseResultMap">
select sp.spID as spID, sp.sID as sID, sp.name as name,
        picUrl, stock, detail, sp.category as category, sp.price as price, seller.name as sName,
        seller.phone as sPhone, seller.address as sAddress, avg(star)
				from specialty as sp,ordertable,comment,seller
				where sp.isDeleted=0 and ordertable.oID = comment.oID and sp.spID=ordertable.spID and seller.sID=sp.sID
				group by(ordertable.spID) order by avg(star) DESC
    </select>
</mapper>